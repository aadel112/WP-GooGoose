<?php
/**
 * Plugin Name: WP GooGoose
 * Plugin URI: http://aadel112.com
 * Description: This plugin makes it possible to generate Microsoft word documents from html templates, and data in you database and/or from other plugins
 * Version: 1.0.0
 * Author: Aaron Adel
 * Author URI: http://aadel112.com
 * License: GPL 3.0
 */

//tutorial from - https://premium.wpmudev.org/blog/wordpress-plugin-development-guide/?mv=b&utm_expid=3606929-67.KOuGWaEfRS2elZCEv5f8LA.1&utm_referrer=https%3A%2F%2Fwww.google.com%2F

//https://codex.wordpress.org/Writing_a_Plugin
//
//README generated by https://generatewp.com/plugin-readme/

# recommended to put in to prevent standalone execution
defined( 'ABSPATH' ) or die( 'No script kiddies please!' );
include_once( ABSPATH . 'wp-admin/includes/plugin.php' );

do_main();

/**
 * Proper way to enqueue scripts and styles.
 */
function wp_enqueue_googoose() {
    wp_enqueue_script( 'goo-goose',  plugin_dir_url(__FILE__) . '/js/jquery.googoose.js', array(), null, true );
    wp_enqueue_script( 'goo-goose-tinymce', plugin_dir_url(__FILE__) . '/js/googoose.tinymce.js', array(), null, true );
   wp_enqueue_script( 'goo-goose-init', plugin_dir_url(__FILE__) . '/js/googoose.init.js', array(), null, true );
}

# adding the admin only scripts and styles
function wp_enqueue_admin() {
    wp_enqueue_script( 'typeahead',  plugin_dir_url(__FILE__) . '/js/typeahead.js', array(), null, true );
    wp_enqueue_script( 'goo-goose',  plugin_dir_url(__FILE__) . '/js/googoose.typeahead.js', array(), null, true );

    wp_register_style( 'goo-goose-admin-css',  plugin_dir_url(__FILE__) . '/css/wp-googoose.css', false, '1.0.0' );
    wp_enqueue_style( 'goo-goose-admin-css' );

}

# adding the admin "Settings" Page
function wp_googoose_admin_add_page() {
    add_options_page('WP GooGoose', 'WP GooGoose', 'manage_options', 'wp_googoose', 'wp_googoose_options_page');
}

# The HTML content for the admin "Settings" Page
function wp_googoose_options_page() {
?>
    <div>
    <form action="options.php" method="post">
        <?php settings_fields( 'wp_googoose_options' ); ?>
        <?php do_settings_sections( 'wp_googoose' ); ?>
        <td><input name="Submit" type="submit" value="<?php esc_attr_e('Save Changes'); ?>" />
    </form>
    </div>
<?php 
}

# the method to init the admin "Settings" page
function wp_googoose_admin_init() {
    register_setting( 'wp_googoose_options', 'wp_googoose_options', 'wp_googoose_options_validate' );
    add_settings_section('wp_googoose_main', 'WP GooGoose Settings', 'wp_googoose_section_text', 'wp_googoose');
    add_settings_field('wp_googoose_options', 'WP GooGoose Options', 'wp_googoose_setting_display', 'wp_googoose', 'wp_googoose_main');
}

function wp_googoose_section_text() {?>
    <p>Please fill in the values. This will determine how Microsoft Word opens the document.</p>
    <p>
    Issues and the like are tracked on github. You can also view the project there. Contributions can be made by following <a href="https://www.paypal.me/aadel112/5">this</a> donation link to paypal. Additionally, the project this is based off is on github <a href="https://github.com/aadel112/googoose">too</a>.
    </p>
    <p>The github location for WP GooGoose is <a href="https://github.com/aadel112/WP-GooGoose">here</a>
    </p>

    <h2>Instructions</h2>
    <p>To use, edit an area with the tinymce editor, for example a page:
        <ol>
            <li>At any time, click the Googoosify button. This will make the content display a "MS Word" button below it which will allow exporting to Microsoft Word.</li>
            <li>If you want the document to have a header or footer, those options are available.</li>
            <li>Current and total page count macros are also available.</li>
        </ol>
    </p>
<?php 
} 

# The default Admin Settings Values
function get_default_options() {
    return array(
        'top_margin' => '1.0in',
        'right_margin' => '1.0in',
        'bottom_margin' => '1.0in',
        'left_margin' => '1.0in',
        'zoom' => '75%',
        'size' => 'Letter (8.5in x 11in)',
        'top_header_margin' => '0.5in',
        'right_header_margin' => '0.5in',
        'bottom_header_margin' => '0.5in',
        'left_header_margin' => '0.5in',
        'top_footer_margin' => '0.5in',
        'right_footer_margin' => '0.5in',
        'bottom_footer_margin' => '0.5in',
        'left_footer_margin' => '0.5in'
    );
}

# creates the admin settings page typeaheads, and handles all form input, etc
function wp_googoose_setting_display() {
    $gg = get_option('wp_googoose_options', get_default_options());
?>
    <table>
    <?php 
        create_tr( 'Top Margin', $gg );
        create_tr( 'Right Margin', $gg );
        create_tr( 'Bottom Margin', $gg );
        create_tr( 'Left Margin', $gg );
        create_tr( 'Zoom', $gg );
        create_tr( 'Size', $gg );
        create_tr( 'Top Header Margin', $gg ); 
        create_tr( 'Right Header Margin', $gg );
        create_tr( 'Bottom Header Margin', $gg );
        create_tr( 'Left Header Margin', $gg );
        create_tr( 'Top Footer Margin', $gg ); 
        create_tr( 'Right Footer Margin', $gg );
        create_tr( 'Bottom Footer Margin', $gg );
        create_tr( 'Left Footer Margin', $gg );
    ?>
    </table>
<?php 
}

# helper
function create_tr( $label, $gg ) {
$ta_type = !strcmp( $label, 'Size' ) ? 'sizes' : ( stristr( $label, 'margin' ) ? 'margins' : 'zooms' );
$field = strtolower( str_replace( ' ', '_', $label ) );
?>

<tr>
    <td><label><?php echo $label;?></label></td>
    <td><input
            id='wp_googoose_options_<?php echo $field;?>'
            name='wp_googoose_options[<?php echo $field;?>]'
            value="<?php echo isset( $gg[$field] ) ? $gg[$field] : ''; ?>"
            class="<?php echo $ta_type;?> typeahead"
            type="text" placeholder="<?php echo $label;?>">
    </td>
</tr>

<?php 
}

# validates admin settings page inputs
function wp_googoose_options_validate( $in ) {
    $default = get_default_options();
    foreach( $in as $k => $v ) {
        $in[$k] = trim( $in[$k] );
        if(!$v) {
            $in[$k] = $default[$k];
        }
//         echo "$v : $in[$k] <br/>";
        # TODO - should do more validation here to prevent options that aren't in the typeahead
    }   
    return $in; 
}

# unused right now, but I may decide to upload svgs, and canvases later on, and
# display the url in the dom
function wp_googoose_unlink() {
    $uploads = scandir(__DIR__ . '/uploads'); 
    foreach( $uploads as $k => $v ) {
        $ff = __DIR__ . "/uploads/$v";
        if( time() - filemtime( $ff ) >= 120 ) {
            unlink( $ff );
        }
    }
}

# wp googoose activation hook, activation just schedules the unlink function to run hourly
function wp_googoose_activate() {
    if (! wp_next_scheduled ( 'wp_googoose_unlink' )) {
    wp_schedule_event(time(), 'hourly', 'wp_googoose_unlink');
    }
}

# The tinymce regisration on the server side
function wp_googoose_tinymce() {
    add_filter( "mce_external_plugins", "wp_googoose_tinymce_add_buttons" );
    add_filter( 'mce_buttons', 'wp_googoose_tinymce_register_buttons' );
        add_filter( 'tiny_mce_before_init', 'tinymce_workaround' );
}

# http://wordpress.stackexchange.com/questions/83997/tinymce-duplicates-previous-block-element-when-pressing-return-visual-editor
function tinymce_workaround( $in ) {
    $in['force_br_newlines'] = true;
    $in['force_p_newlines'] = false;
    $in['forced_root_block'] = '';
    return $in;
}

function wp_googoose_tinymce_add_buttons( $array ) {
    $array['wp_googoose'] = plugin_dir_url(__FILE__) . '/js/googoose.tinymce.js';
    return $array;
}

function wp_googoose_tinymce_register_buttons( $buttons ) {
    array_push( 
        $buttons, 
        'Googoosify', 
        'Googoose_Header', 
        'Googoose_Footer',
        'Googoose_Current_Page_Number',
        'Googoose_Total_Page_Count',
        'Googoose_Add_Page_Break'
    );
    return $buttons;
}

function footer() {
    $gg = get_option('wp_googoose_options', get_default_options());
    foreach( $gg as $k => $v ) {
        $gg[$k] = str_replace( 'in', '|', $v );
        $gg[$k] = trim(preg_replace( '/(in|[^0-9\. \|])/SU', '', $gg[$k] ));
        $gg[$k] = str_replace( '|', 'in', $gg[$k] );
//         echo "$v : $gg[$k]<br/>";
    }

?>
    <input type='hidden'
class='googoose_options' 
value='<?php echo json_encode($gg); ?>' />
<?php
}

# control logic
function do_main() {
    # admin tasks
    if( is_admin() ) {
        add_action( 'admin_enqueue_scripts', 'wp_enqueue_admin' );    
        # http://ottopress.com/2009/wordpress-settings-api-tutorial/
        # adds the settings page
        add_action('admin_menu', 'wp_googoose_admin_add_page');
        # adds the settings to the page
        add_action('admin_init', 'wp_googoose_admin_init');
        # https://developer.wordpress.org/plugins/the-basics/activation-deactivation-hooks/
        # activation/deactivation hooks
        register_activation_hook( __FILE__, 'wp_googoose_activate' );
    }

    # add js
    add_action( 'wp_enqueue_scripts', 'wp_enqueue_googoose' );
    # add tinymce functionality
    # http://code.tutsplus.com/tutorials/guide-to-creating-your-own-wordpress-editor-buttons--wp-30182
    add_action( 'init', 'wp_googoose_tinymce' );
    add_action( 'wp_footer', 'footer' );
}


?>
